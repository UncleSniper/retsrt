provide +retsina.self.intrin.TopItem.CompoundTypeDefinition
__intrin

pub mod retsina::self::intrin {

	pub type MemberMethodDefinition < FacetlessCompoundTypeMember {
		pub public: bool
		pub local: bool
		pub implicitParameters: List ParameterDefinition
		pub name: MemberName
		pub transforms: List Expression
		pub explicitParameters: List MethodParameterDefinition
		pub generalization: Maybe Expression
		pub returnType: Maybe Expression
		pub body: Maybe Expression
	}
	rend: [public: `pub`]? `spec`
			(`(` ([implicitParameters: ParameterDefinition] / `,`) `)`)?
			([name: MemberName] [local: `#`]?)?
			(`[` ([transforms: Expression] / `,`) `]`)?
			(`:` ([explicitParameters: MethodParameterDefinition] / `,`))?
			(`<-` [generalization: Expression])?
			(`=>` [returnType: Expression])?
			(`=` [body: Expression])?
		= new MemberMethodDefinition {
			public = public.just?,
			local = local.just?,
			implicitParameters = implicitParameters or [],
			name = name,
			transforms = transforms or [],
			explicitParameters = explicitParameters or [],
			generalization = generalization,
			returnType = returnType,
			body = body
		}

}
